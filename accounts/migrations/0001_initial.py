# Generated by Django 5.2.5 on 2025-09-07 13:23

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import re
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator(flags=re.RegexFlag['ASCII'], regex='^09\\d{9}$')], verbose_name='Phone')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(choices=[('Tehran', 'Tehran'), ('Alborz', 'Alborz'), ('Fars', 'Fars'), ('Khorasan_Razavi', 'Khorasan Razavi'), ('Kermanshah', 'Kermanshah'), ('Isfahan', 'Isfahan'), ('Yazd', 'Yazd'), ('Hamedan', 'Hamedan'), ('Kerman', 'Kerman'), ('Khuzestan', 'Khuzestan'), ('Gilan', 'Gilan'), ('Mazandaran', 'Mazandaran'), ('Zanjan', 'Zanjan'), ('Golestan', 'Golestan'), ('Bushehr', 'Bushehr'), ('Semnan', 'Semnan'), ('Ardebil', 'Ardebil'), ('Qazvin', 'Qazvin'), ('Qom', 'Qom'), ('South_Khorasan', 'South Khorasan'), ('North_Khorasan', 'North Khorasan'), ('Markazi', 'Markazi'), ('Kohgiluyeh_Boyerahmad', 'Kohgiluyeh and Boyerahmad'), ('Chaharmahal_Bakhtiari', 'Chaharmahal and Bakhtiari'), ('Ilam', 'Ilam'), ('West_Azerbaijan', 'West Azerbaijan'), ('East_Azerbaijan', 'East Azerbaijan'), ('Lorestan', 'Lorestan'), ('Sistan_Baluchestan', 'Sistan and Baluchestan'), ('Hormozgan', 'Hormozgan')], max_length=30, verbose_name='Province')),
                ('city', models.CharField(max_length=60, verbose_name='City')),
                ('street', models.CharField(max_length=60, verbose_name='Street')),
                ('alley', models.CharField(max_length=60, verbose_name='Alley')),
                ('number', models.CharField(max_length=5, verbose_name='Number')),
                ('zip_code', models.CharField(max_length=10, verbose_name='Zip Code')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateTimeField(auto_now_add=True, verbose_name='Creation')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('returned', 'Returned')], default='pending', max_length=10, verbose_name='Status')),
                ('customer_note', models.TextField(blank=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='accounts.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-creation'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(verbose_name='Price')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('discount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.discount', verbose_name='Discount')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitems', to='accounts.order', verbose_name='Order')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orderitems', to='shop.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
            },
        ),
    ]
